<!DOCTYPE html>
<head>
  <meta charset="utf-8">
  <style>
.daterowhead {
  height: 16px;
  position: relative;
  margin-top: 2px;
}
.daterowbody {
  height: 16px;
  width: 100%;
  position: relative;
  margin-top: 2px;
  border: 2px solid #c6c6c6;
  padding: 0;
}
.duration {
  height: 12px;
  background-color: #ccccff;
  position: absolute;
  margin: 0;
  padding: 0;
  border: 2px solid #0000ff;
}
.time {
  height: 12px;
  //background-color: #ff0000;
  position: absolute;
  margin: 0;
  padding: 0;
    border: 2px dotted #ff0000;
  background-color: rgba(255, 0, 0, 0.2);
}
</style>
</head>
<body>
  <textarea id='input' style='display:none'>
<%= fitbit_sleep_data %>
  </textarea>
  <textarea id='ramelteonInput' style='display:none'>
<%= ramelteon_data %>
    </textarea>
  <div>
    <input id="dateBegin"type="date">
    <input id="dateLast"type="date">
    <button id="updateButton" onclick='updateResult();'>表示</button>
  </div>
  <div id='output'>
    <div id='d1' class='daterow'>
      <div id='t1' style='left: 10%; height: 16px; width: 20%; background-color: #00ff00; position: absolute;'></div>
    
    </div>
    <div id='d2' class='daterow'></div>
  </div>
  <script
  src="https://code.jquery.com/jquery-3.4.1.min.js"
  integrity="sha256-CSXorXvZcTkaix6Yvo6HppcZGetbYMGWSFlBw8HfCJo="
  crossorigin="anonymous"></script>
  <script>
let durationStrList = document.getElementById('input').value.split('\n').map((s)=>s.split(',').splice(0, 2)).filter((e)=>e.length==2).map((e)=>e.map((ds)=>ds.split('"').join('')))
let durationDateList = durationStrList.map((d) => d.map((s) => {
  let es = s.split(' ');
  let date_nums = es[0].split('.').map((s)=>parseInt(s, 10));
  let time_nums = es[2].split(':').map((s)=>parseInt(s, 10)); 
  if(es[1]=="午後") time_nums[0] = ((time_nums[0]%12) + 12);
  else time_nums[0] = time_nums[0]%12;
  return new Date(date_nums[0], date_nums[1]-1, date_nums[2], time_nums[0], time_nums[1]);
}))

let timeStrList = document.getElementById('ramelteonInput').value.split('\n').map((s)=>s.split(',').splice(0, 2)).filter((e)=>e.length==2);
let timeDateList = timeStrList.map(e=>new Date(parseFloat(e[0]) * 1000));

let durationInDateKV = {};

function appendDuration(key, begin, end){
  if(durationInDateKV[key] === undefined) durationInDateKV[key] = [];
  if(begin === undefined) begin = 0;
  if(end === undefined) end = 60 * 24;
  durationInDateKV[key].push([begin, end]);
}

function appendTime(key, begin){
  if(durationInDateKV[key] === undefined) durationInDateKV[key] = [];
  durationInDateKV[key].push([begin]);
}

function getDateKey(d) {
  var y = d.getFullYear();
  var m = d.getMonth();
  var d = d.getDate();
  return y+"-"+("00"+(m+1)).substr(-2)+"-"+("00"+(d)).substr(-2);
}

for(let d of durationDateList) {
  let beginDate = d[0];
  let endDate = d[1];
  let beginKey = getDateKey(beginDate);
  let endKey = getDateKey(endDate);
  let beginMinutesInDay = beginDate.getMinutes() + beginDate.getHours() * 60;
  let endMinutesInDay = endDate.getMinutes() + endDate.getHours() * 60;
  if(beginKey == endKey) {
    appendDuration(beginKey, beginMinutesInDay, endMinutesInDay);
  } else{
    appendDuration(beginKey, beginMinutesInDay, undefined);
    appendDuration(endKey, undefined, endMinutesInDay);
  }
}

for(let d of timeDateList) {
  let beginKey = getDateKey(d);
  let beginMinutesInDay = d.getMinutes() + d.getHours() * 60;
  appendTime(beginKey, beginMinutesInDay);
}

console.log(durationInDateKV);

let durationInDateList = [];

for(let k in durationInDateKV) {
  durationInDateList.push([k, durationInDateKV[k]]);
}

durationInDateList = durationInDateList.sort((eL, eR) => (eL[0] > eR[0]) ? 1 : -1);
console.log(durationInDateList);

function updateResult() {

let resultDiv = $('#output');
resultDiv.empty();
let dateBegin = document.getElementById("dateBegin");
let dateLast = document.getElementById("dateLast");
if(!dateBegin.value)dateBegin.value = durationInDateList[0][0];
if(!dateLast.value)dateLast.value = durationInDateList[durationInDateList.length - 1][0];
let beginDateTime = (new Date(dateBegin.value)).getTime();
let lastDateTime = (new Date(dateLast.value)).getTime() + (1000 * 60 * 60 * 24);
for(let row of durationInDateList) {
  let key = row[0];
  let keyDate = new Date(key);
  if(keyDate.getTime() < beginDateTime || lastDateTime < keyDate.getTime()) continue;
  let durations = row[1];
  let rowDivHead = $('<div>').addClass('daterowhead').text(key);
  resultDiv.append(rowDivHead);
  let rowDivBody = $('<div>').addClass('daterowbody');
  resultDiv.append(rowDivBody);
  for(let d of durations) {
    if(d.length == 2){
      rowDivBody.append($('<div>').addClass('duration').css('left', "" + (d[0] / (60 * 24) * 100) + "%").css('width', "" + ((d[1] - d[0]) / (60 * 24) * 100) + "%"));
    } else {
      rowDivBody.append($('<div>').addClass('time').css('left', "" + (d[0] / (60 * 24) * 100) + "%").css('width', "4.17%"));
    }
  }

}
}

updateResult();

</script>
</body>

